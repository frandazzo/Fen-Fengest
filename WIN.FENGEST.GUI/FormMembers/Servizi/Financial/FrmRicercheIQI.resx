<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAMAICAQAAEABADoAgAANgAAACAgAAABAAgAqAgAAB4DAAAgIAAAAQAgAKgQAADGCwAAKAAAACAA
        AABAAAAAAQAEAAAAAAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAIAAAACAgACAAAAAgACAAICA
        AACAgIAAwMDAAAAA/wAA/wAAAP//AP8AAAD/AP8A//8AAP///wAAAAAAAAAAAAAAAAAAAAAAAAB3AAAA
        AAAAAAAAAAAAAAAHd3AAAAAAAAAAAAAAAAAAB/d3AAAAAAAAAAAAAAAAAAePd3AAAAAAAAAAAAAAAAAA
        eId3AAAAAAAAAAAAAAAAAAeIdwAAAAAAAAAAAAAAAAAAf3dwAAAAAAAAAAAAAAAAAAf3dwAAAAAAAAAA
        AAAAAAAIeHdwAAAAAAAAAAAAAAAAAIiHcAAAAAAAAAAAAAAAAAAHh3cAAAAAAAAAAAAAAAAAAHh3d3d4
        d3cAAAAAAAAAAAAIh3iAAACIcAAAAAAAAAAAAHiAAAAAAIeAAAAAAAAAAAB/AAAAAAAIcAAAAAAAAAAH
        gAAAAAAAAIcAAAAAAAAAeAAAAAAAAAAIcAAAAAAAAHgAAAAAAA/wCHAAAAAAAACIAAAP///4/whwAAAA
        AAAAgAAA//+P/4+AgAAAAAAAAIAAAPj4/4+P8IAAAAAAAACAAAAA/4/4+PiAAAAAAAAAeAAP+AD4+PiI
        cAAAAAAAAHgAD//4gIiPiHAAAAAAAACIAA+Pj//4iIhwAAAAAAAAB4APj/j4+PiHAAAAAAAAAAeIiPj/
        j4+IgAAAAAAAAAAAeIj/j4/4iHAAAAAAAAAAAAd4iPj4iHcAAAAAAAAAAAAAB3eIh3cAAAAAAAAAAAAA
        AAAHdnAAAAAAAP/////z////4f///+D////gf///8D////g////8H////g////4H////B////4P////A
        AP//4Hx///H/H//z/5//5//P/8//5//P/mf/z4An/98AF//fABf/38AH/84wB//OBAf/zgAH/+YAD//g
        AB//8AAf//gAP//+AP///4f/KAAAACAAAABAAAAAAQAIAAAAAAAABAAAAAAAAAAAAAAAAQAAAAEAAAAA
        AABfX18AYmJiAGZmZgBtbGwAc3NzAHRzcwB1dXUAfXZ4AHp6egB7e3wAfn19AIN+gQCAgIIAhYSDAIKC
        hACFhIUAiICCAImGgwCJhIYAjYqHAIeHiACJiYkAjIqJAI2NjQCRiYMAlIyGAJCOjgCXjpEAkpGRAJOT
        lACVlZUAmJeXAJ+YkQCbmZYAnJaZAJmZmQCcmZoAm5ucAJ6fngClm5MAppyTAKOclgCgm50AoJ+eAKWd
        ngChoqIApaGiAKOjpAClo6QApqalAKmlowCvp6kAqampAKyqqACtrKsAra2tALSrowCzq6UAsKmqALCu
        rgC0rK8At7GoAL+0qAC7tK0As7GxALa0sgC1srQAuLa1AL66tQC8vL4Aw7qxAMfDvwDVxrIA2Me0ANfK
        uQDZzb8A3M6+AODNtQDr1r4A/9WyAPbYuwD4270A/9u8AMPAwADHxsIAzMfBAMvFxwDOzcsAz83PANLL
        wADf0cEA2NHHANvUywDZ08wA1tLTANnX1ADc1tkA4NPFAOzWwADr2cYA69nIAOvcywD33MAA/97CAOTf
        1wD/4cgA/+TNAO/j1ADw5NYA/+bRAPno1wD/6NQA/+rYAP/s2wD57N8A/+zdAOPd4ADl3+IA4+DiAOXi
        5AD/7uEA//DiAP7w5AD/8ukA//TrAP/17AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP//
        /wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQBAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAEBAVAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMdx8fAgAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAC89dxUQBgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABNXWRUGFQAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAhhRB8CAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAh2LxUCAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABN1IAoGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQxxf
        GwIfAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALy1UEAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAIzQ9BAYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIzslAgYVChUlLyUQCiUAAAAAAAAAAAAA
        AAAAAAAAAAAALUM1EDtYAAAAAABULAoAAAAAAAAAAAAAAAAAAAAAAAAACkRhAAAAAAAAAAAAVxAsAAAA
        AAAAAAAAAAAAAAAAAAAfaQAAAAAAAAAAAAAAXRAAAAAAAAAAAAAAAAAAAAAAEF4AAAAAAAAAAAAAAAAA
        VgoAAAAAAAAAAAAAAAAAAB9DAAAAAAAAAAAAAAAAAAAAMh8AAAAAAAAAAAAAAAAAEFwAAAAAAAAAAAAA
        AHt5AABaCgAAAAAAAAAAAAAAAAAfZgAAAAAAfn5+fnt7e3l0AGQVAAAAAAAAAAAAAAAAADsAAAAAAH5+
        fn57fnt5dHRuAC8AAAAAAAAAAAAAAAAAQwAAAAAAdHt7e3t7e3R0dHAAOwAAAAAAAAAAAAAAAAA2AAAA
        AAAAAHR7e3t5eXR0dFEyAAAAAAAAAAAAAAAAACJPAAAAe3RuAABwdHl0eXRuYx8AAAAAAAAAAAAAAAAA
        EEsAAAB5e3t0bmoAaGpqbmpMEAAAAAAAAAAAAAAAAAAfPgAAAHR7e3t7e3RuamhTU0UWAAAAAAAAAAAA
        AAAAAAAUSQAAbnt7e3t7eXl5eW5bFQAAAAAAAAAAAAAAAAAAACUhTlBqe3t7e3t7e3t0ZC8AAAAAAAAA
        AAAAAAAAAAAAAB8hSmh0fnt7e3t7cFszFQAAAAAAAAAAAAAAAAAAAAAAABsaP0ttdH5zbV1HFR8AAAAA
        AAAAAAAAAAAAAAAAAAAAAAAKGiE5QDkhFBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIhUQGwAAAAAA
        AAAAAAAA//////P////h////4P///+B////wP///+D////wf///+D////gf///8H////g////8AA///g
        fH//8f8f//P/n//n/8//z//n/8/+Z//PgCf/3wAX/98AF//fwAf/zjAH/84EB//OAAf/5gAP/+AAH//w
        AB//+AA///4A////h/8oAAAAIAAAAEAAAAABACAAAAAAAIAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAEBAQMZGRkuGxsbMAEBARUAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAABAQELLS0tkzAwMLQvLy9/Nzc3NwAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAE5MTq2FhIT/iIiI/0RERNU/Pz9uKisqKwAAAAoAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAdXBz5ePg4v+VlJX/kJCQ/jU2NcFKSkpaFRUVIgAA
        AAUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB2b3GntKyv/+Xi5P+Mi4v/gYGB9ysq
        KqdJSUlJBQUFGgAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHt2eg1tZmnNy8XH/8/N
        z/+NjIz/aGho7CoqKow+Pj45AAAAEQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHRw
        dCZtZmjj3NbZ/7i2t/+Ojo7/SkpK2zk4OHIrKyssAAAACQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAHBsb0V3b3Hx5d/i/6WjpP+KiYn/NjY2wkRERFkSEhIhAAAABAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAG9qbmSHfoH7493g/5aVlf92dnb2KikppEFBQUQBAQEWAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        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
        AA//4AAf//AAP//4AH///gH/
</value>
  </data>
</root>